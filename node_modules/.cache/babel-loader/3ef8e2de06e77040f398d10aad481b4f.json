{"ast":null,"code":"import { e as elementChildren } from '../shared/utils.mjs';\n\nfunction Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const elementsSelector = '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]';\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n\n    el.style.transform = transform;\n  };\n\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid,\n      isElement\n    } = swiper;\n    const elements = elementChildren(el, elementsSelector);\n\n    if (swiper.isElement) {\n      elements.push(...elementChildren(swiper.hostEl, elementsSelector));\n    }\n\n    elements.forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll(`${elementsSelector}, [data-swiper-parallax-rotate]`).forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = function (duration) {\n    if (duration === void 0) {\n      duration = swiper.params.speed;\n    }\n\n    const {\n      el,\n      hostEl\n    } = swiper;\n    const elements = [...el.querySelectorAll(elementsSelector)];\n\n    if (swiper.isElement) {\n      elements.push(...hostEl.querySelectorAll(elementsSelector));\n    }\n\n    elements.forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}\n\nexport { Parallax as default };","map":{"version":3,"sources":["/Users/damodhardattareddylikki/Desktop/Damodhar_portfolio/portfolio/node_modules/swiper/modules/parallax.mjs"],"names":["e","elementChildren","Parallax","_ref","swiper","extendParams","on","parallax","enabled","elementsSelector","setTransform","el","progress","rtl","rtlFactor","p","getAttribute","x","y","scale","opacity","rotate","isHorizontal","indexOf","parseInt","currentOpacity","Math","abs","style","transform","currentScale","currentRotate","setTranslate","slides","snapGrid","isElement","elements","push","hostEl","forEach","subEl","slideEl","slideIndex","slideProgress","params","slidesPerGroup","slidesPerView","ceil","length","min","max","querySelectorAll","setTransition","duration","speed","parallaxEl","parallaxDuration","transitionDuration","watchSlidesProgress","originalParams","_swiper","default"],"mappings":"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","sourcesContent":["import { e as elementChildren } from '../shared/utils.mjs';\n\nfunction Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const elementsSelector = '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]';\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid,\n      isElement\n    } = swiper;\n    const elements = elementChildren(el, elementsSelector);\n    if (swiper.isElement) {\n      elements.push(...elementChildren(swiper.hostEl, elementsSelector));\n    }\n    elements.forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll(`${elementsSelector}, [data-swiper-parallax-rotate]`).forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = function (duration) {\n    if (duration === void 0) {\n      duration = swiper.params.speed;\n    }\n    const {\n      el,\n      hostEl\n    } = swiper;\n    const elements = [...el.querySelectorAll(elementsSelector)];\n    if (swiper.isElement) {\n      elements.push(...hostEl.querySelectorAll(elementsSelector));\n    }\n    elements.forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}\n\nexport { Parallax as default };\n"]},"metadata":{},"sourceType":"module"}