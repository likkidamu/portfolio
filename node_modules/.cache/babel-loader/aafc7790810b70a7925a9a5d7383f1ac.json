{"ast":null,"code":"import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { s as setCSSProperty, e as elementChildren, c as createElement } from '../shared/utils.mjs';\n\nfunction Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    } // eslint-disable-next-line\n\n\n    let slideEl;\n\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n\n    slideEl.setAttribute('data-swiper-slide-index', index);\n\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n\n    if (params.cache) {\n      swiper.virtual.cache[index] = slideEl;\n    }\n\n    return slideEl;\n  }\n\n  function update(force, beforeInit) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop,\n      initialSlide\n    } = swiper.params;\n\n    if (beforeInit && !isLoop && initialSlide > 0) {\n      return;\n    }\n\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n\n          return slidesToRender;\n        }()\n      });\n\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n\n      return;\n    }\n\n    const prependIndexes = [];\n    const appendIndexes = [];\n\n    const getSlideIndex = index => {\n      let slideIndex = index;\n\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n\n      return slideIndex;\n    };\n\n    if (force) {\n      swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`)).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`)).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n\n    update(true);\n  }\n\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]]; // shift cache indexes\n\n          Object.keys(swiper.virtual.cache).forEach(key => {\n            if (key > slidesIndexes) {\n              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n              swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n              delete swiper.virtual.cache[key];\n            }\n          });\n        }\n\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes]; // shift cache indexes\n\n        Object.keys(swiper.virtual.cache).forEach(key => {\n          if (key > slidesIndexes) {\n            swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n            swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n            delete swiper.virtual.cache[key];\n          }\n        });\n      }\n\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    update(false, true);\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}\n\nexport { Virtual as default };","map":{"version":3,"sources":["/Users/damodhardattareddylikki/Desktop/Damodhar_portfolio/portfolio/node_modules/swiper/modules/virtual.mjs"],"names":["g","getDocument","s","setCSSProperty","e","elementChildren","c","createElement","Virtual","_ref","swiper","extendParams","on","emit","virtual","enabled","slides","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","cssModeTimeout","document","from","undefined","to","offset","slidesGrid","tempDOM","slide","index","params","slideEl","call","innerHTML","children","isElement","slideClass","setAttribute","update","force","beforeInit","slidesPerView","slidesPerGroup","centeredSlides","loop","isLoop","initialSlide","previousFrom","previousTo","previousSlidesGrid","previousOffset","cssMode","updateActiveIndex","activeIndex","offsetProp","rtlTranslate","isHorizontal","slidesAfter","slidesBefore","Math","floor","max","min","length","Object","assign","onRendered","updateSlides","updateProgress","updateSlidesClasses","forEach","style","abs","cssOverflowAdjustment","getSlides","slidesToRender","i","push","prependIndexes","appendIndexes","getSlideIndex","slideIndex","filter","el","matches","remove","loopFrom","loopTo","slidesEl","append","prepend","sort","a","b","appendSlide","prependSlide","newActiveIndex","numberOfNewSlides","Array","isArray","unshift","newCache","keys","cachedIndex","cachedEl","cachedElIndex","getAttribute","parseInt","slideTo","removeSlide","slidesIndexes","key","splice","removeAllSlides","domSlidesAssigned","passedParams","classNames","containerModifierClass","watchSlidesProgress","originalParams","_immediateVirtual","clearTimeout","setTimeout","wrapperEl","virtualSize","default"],"mappings":"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","sourcesContent":["import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { s as setCSSProperty, e as elementChildren, c as createElement } from '../shared/utils.mjs';\n\nfunction Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) {\n      swiper.virtual.cache[index] = slideEl;\n    }\n    return slideEl;\n  }\n  function update(force, beforeInit) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop,\n      initialSlide\n    } = swiper.params;\n    if (beforeInit && !isLoop && initialSlide > 0) {\n      return;\n    }\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`)).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slides.filter(el => el.matches(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`)).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n          // shift cache indexes\n          Object.keys(swiper.virtual.cache).forEach(key => {\n            if (key > slidesIndexes) {\n              swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n              swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n              delete swiper.virtual.cache[key];\n            }\n          });\n        }\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n        // shift cache indexes\n        Object.keys(swiper.virtual.cache).forEach(key => {\n          if (key > slidesIndexes) {\n            swiper.virtual.cache[key - 1] = swiper.virtual.cache[key];\n            swiper.virtual.cache[key - 1].setAttribute('data-swiper-slide-index', key - 1);\n            delete swiper.virtual.cache[key];\n          }\n        });\n      }\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    update(false, true);\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}\n\nexport { Virtual as default };\n"]},"metadata":{},"sourceType":"module"}