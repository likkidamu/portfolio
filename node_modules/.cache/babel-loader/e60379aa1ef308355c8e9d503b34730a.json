{"ast":null,"code":"import { a as getWindow } from '../shared/ssr-window.esm.mjs';\n\nfunction History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${index}\"]`) : swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n\n      return;\n    }\n\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}\n\nexport { History as default };","map":{"version":3,"sources":["/Users/damodhardattareddylikki/Desktop/Damodhar_portfolio/portfolio/node_modules/swiper/modules/history.mjs"],"names":["a","getWindow","History","_ref","swiper","extendParams","on","history","enabled","root","replaceState","key","keepQuery","initialized","paths","slugify","text","toString","replace","getPathValues","urlOverride","window","location","URL","pathArray","pathname","slice","split","filter","part","total","length","value","setHistory","index","params","url","slide","virtual","slidesEl","querySelector","slides","getAttribute","includes","search","currentState","state","pushState","scrollToSlide","speed","runCallbacks","i","slideHistory","getSlideIndex","slideTo","setHistoryPopState","init","hashNavigation","addEventListener","runCallbacksOnInit","destroy","removeEventListener","activeIndex","cssMode","default"],"mappings":"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","sourcesContent":["import { a as getWindow } from '../shared/ssr-window.esm.mjs';\n\nfunction History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${index}\"]`) : swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}\n\nexport { History as default };\n"]},"metadata":{},"sourceType":"module"}